
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE NULL NUMBER STRING TRUEjson : element\n            value : object\n            value : array\n            value : STRING\n            value : NUMBER\n            value : TRUE\n            value : FALSE\n            value : NULL\n        object : "{" "}"object : "{" members "}"members : membermembers : members "," membermember : STRING ":" elementarray : array : "[" elements "]"elements : elementelements : elements "," elementelement : value'
    
_lr_action_items = {'STRING':([0,11,12,20,21,23,],[6,16,6,16,6,6,]),'NUMBER':([0,12,21,23,],[7,7,7,7,]),'TRUE':([0,12,21,23,],[8,8,8,8,]),'FALSE':([0,12,21,23,],[9,9,9,9,]),'NULL':([0,12,21,23,],[10,10,10,10,]),'{':([0,12,21,23,],[11,11,11,11,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,13,19,22,],[-14,0,-1,-18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-15,]),'[':([0,12,21,23,],[12,12,12,12,]),']':([3,4,5,6,7,8,9,10,12,13,17,18,19,22,23,26,],[-18,-2,-3,-4,-5,-6,-7,-8,-14,-9,22,-16,-10,-15,-14,-17,]),',':([3,4,5,6,7,8,9,10,12,13,14,15,17,18,19,21,22,23,24,25,26,],[-18,-2,-3,-4,-5,-6,-7,-8,-14,-9,20,-11,23,-16,-10,-14,-15,-14,-12,-13,-17,]),'}':([3,4,5,6,7,8,9,10,11,13,14,15,19,21,22,24,25,],[-18,-2,-3,-4,-5,-6,-7,-8,13,-9,19,-11,-10,-14,-15,-12,-13,]),':':([16,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'json':([0,],[1,]),'element':([0,12,21,23,],[2,18,25,26,]),'value':([0,12,21,23,],[3,3,3,3,]),'object':([0,12,21,23,],[4,4,4,4,]),'array':([0,12,21,23,],[5,5,5,5,]),'members':([11,],[14,]),'member':([11,20,],[15,24,]),'elements':([12,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> json","S'",1,None,None,None),
  ('json -> element','json',1,'p_json','json_parser.py',14),
  ('value -> object','value',1,'p_value','json_parser.py',19),
  ('value -> array','value',1,'p_value','json_parser.py',20),
  ('value -> STRING','value',1,'p_value','json_parser.py',21),
  ('value -> NUMBER','value',1,'p_value','json_parser.py',22),
  ('value -> TRUE','value',1,'p_value','json_parser.py',23),
  ('value -> FALSE','value',1,'p_value','json_parser.py',24),
  ('value -> NULL','value',1,'p_value','json_parser.py',25),
  ('object -> { }','object',2,'p_object_empty','json_parser.py',30),
  ('object -> { members }','object',3,'p_object_members','json_parser.py',34),
  ('members -> member','members',1,'p_members_single','json_parser.py',38),
  ('members -> members , member','members',3,'p_members_multiple','json_parser.py',42),
  ('member -> STRING : element','member',3,'p_member','json_parser.py',47),
  ('array -> <empty>','array',0,'p_array_empty','json_parser.py',51),
  ('array -> [ elements ]','array',3,'p_array_elements','json_parser.py',55),
  ('elements -> element','elements',1,'p_elements_single','json_parser.py',59),
  ('elements -> elements , element','elements',3,'p_elements_multiple','json_parser.py',63),
  ('element -> value','element',1,'p_element','json_parser.py',67),
]
